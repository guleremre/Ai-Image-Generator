import { useEffect, useRef } from "react";
import axios from "axios";

const Profile = () => {
  const cloudinaryRef = useRef();
  const widgetRef = useRef();

  function UploadToWidget() {
    cloudinaryRef.current = window.cloudinary;
    widgetRef.current = cloudinaryRef.current.createUploadWidget(
      {
        cloudName: "djyfosrda",
        uploadPreset: "airtistic",
        cropping: true,
        // theme: "purple",
        folder: "ai_generator",
        multiple: false,
        // clientAllowedFormats: ["images"],
      },
      function (error, result) {
        if (!error && result && result.event === "success") {
          console.log(result);
          console.log("news", result.info.secure_url);

          var avatar = result.info.secure_url;

          post(avatar); // Call the post function with the image data
          auth();
        } else if (error) {
          console.error("Error uploading image:", error);
        }
      }
    );
  }
  // async function auth() {
  //   const url = "http://localhost:4000/user/verify";
  //   const token = localStorage.getItem("token");
  //   const response = await axios.post(url, token);

  //   console.log(response);
  // }
  async function auth() {
    const url = "http://localhost:4000/user/verify";
    const token = localStorage.getItem("token");

    try {
      const response = await axios.post(url, { token }); // Send the token in the request body
      console.log(response.data); // This will contain the user ID returned from the server
      console.log(response.data._id);
    } catch (error) {
      console.error("Error verifying token:", error);
    }
  }

  //to send image url to backend
  async function post(avatar) {
    const url = "http://localhost:4000/img/";

    try {
      const response = await axios.post(url, {
        avatar,
        userId: response.data._id,
      });
      console.log("Upload successful!", response.data);
    } catch (error) {
      console.error("Error uploading image:", error);
    }
  }
  useEffect(() => {
    UploadToWidget();
  }, []);

  return (
    <div>
      <h1>hi</h1>
      <button onClick={() => widgetRef.current.open()}>Upload</button>
    </div>
  );
};

export default Profile;

ben'm gptye yapi;tirdigim
